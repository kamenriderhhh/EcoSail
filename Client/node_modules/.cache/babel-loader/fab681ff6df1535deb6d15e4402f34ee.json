{"ast":null,"code":"import _objectSpread from \"F:\\\\Project\\\\FYP-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"F:\\\\Project\\\\FYP-project\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Card, CardText, Button } from 'reactstrap';\nimport Joi from 'joi';\nimport L from 'leaflet';\nimport pin from './pinpoint.png';\nimport './App.css'; // Component for side drawer and toolbar\n\nimport Toolbar from './components/Toolbar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop'; //import classnames from 'classnames';\n\nimport CardForm from './components/CardForm/CardForm';\nimport { getLocation, sendLocation } from './API';\nvar myIcon = L.icon({\n  iconUrl: pin,\n  iconSize: [30, 41],\n  iconAnchor: [12.5, 40],\n  popupAnchor: [0, -45]\n});\nconst schema = Joi.object().keys({\n  latitude: Joi.number().min(-90).max(90).required(),\n  longitude: Joi.number().min(-180).max(180).required()\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: {\n        lat: 5.354482,\n        lng: 100.301226\n      },\n      haveUsersLocation: false,\n      zoom: 1,\n      userSetLocation: {\n        slat: '',\n        slng: ''\n      },\n      locations: [],\n      showLocationForm: false,\n      sendingLocation: false,\n      sentLocation: false,\n      //sideDrawer \n      sideDrawerOpen: false\n    };\n\n    this.showLocationForm = () => {\n      this.setState({\n        showLocationForm: true\n      });\n    };\n\n    this.cancelLocation = () => {\n      this.setState({\n        showLocationForm: false\n      });\n    };\n\n    this.formIsValid = () => {\n      const userSetLocation = {\n        latitude: this.state.userSetLocation.slat,\n        longitude: this.state.userSetLocation.slng\n      };\n      const result = Joi.validate(userSetLocation, schema); //console.log(userSetLocation);\n\n      return !result.error && userSetLocation ? true : false;\n    };\n\n    this.formSubmitted = event => {\n      event.preventDefault(); //console.log(this.state.userSetLocation);\n\n      if (this.formIsValid()) {\n        //if no error\n        this.setState({\n          sendingLocation: true\n        });\n        const location = {\n          latitude: this.state.userSetLocation.slat,\n          longitude: this.state.userSetLocation.slng\n        };\n        sendLocation(location).then(result => {\n          setTimeout(() => {\n            this.setState({\n              sendingLocation: false,\n              sentLocation: true\n            });\n          }, 4000);\n        });\n      }\n    };\n\n    this.valueChanged = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState(prevState => ({\n        userSetLocation: _objectSpread({}, prevState.userSetLocation, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.drawerToggleClickHandler = () => {\n      this.setState(prevState => {\n        return {\n          sideDrawerOpen: !prevState.sideDrawerOpen\n        };\n      });\n    };\n\n    this.backdropClickHandler = () => {\n      this.setState({\n        sideDrawerOpen: false\n      });\n    };\n  }\n\n  // Get user geolocation and reconfigurate some attributes\n  componentDidMount() {\n    // Location from the database\n    getLocation().then(locations => {\n      this.setState({\n        locations,\n        haveUsersLocation: true,\n        zoom: 18\n      });\n    });\n  }\n\n  render() {\n    const position = [this.state.location.lat, this.state.location.lng]; // sidedrawer backdrop variable\n\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = React.createElement(Backdrop, {\n        click: this.backdropClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      drawerClickHandler: this.drawerToggleClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      show: this.state.sideDrawerOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), backdrop, React.createElement(\"div\", {\n      className: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Map, {\n      className: \"map\",\n      center: position,\n      zoom: this.state.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), this.state.haveUsersLocation ? React.createElement(Marker, {\n      position: position,\n      icon: myIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"lat:\", this.state.location.lat, \", lng:\", this.state.location.lng)) : \"\", this.state.locations.map(location => React.createElement(Marker, {\n      position: [location.latitude, location.longitude],\n      icon: myIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"lat:\", location.latitude, \", lng:\", location.longitude)))), !this.state.showLocationForm ? React.createElement(Button, {\n      className: \"location-form\",\n      onClick: this.showLocationForm,\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Add a location\") : !this.state.sentLocation ? React.createElement(CardForm, {\n      cancelLocation: this.cancelLocation,\n      showLocationForm: this.state.showLocationForm,\n      sendingLocation: this.state.sendingLocation,\n      sentLocation: this.state.sentLocation,\n      haveUsersLocation: this.state.haveUsersLocation,\n      formSubmitted: this.formSubmitted,\n      valueChanged: this.valueChanged,\n      formIsValid: this.formIsValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }) : this.setState({\n      sentLocation: false\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["F:\\Project\\FYP-project\\client\\src\\App.js"],"names":["React","Component","Map","TileLayer","Marker","Popup","Card","CardText","Button","Joi","L","pin","Toolbar","SideDrawer","Backdrop","CardForm","getLocation","sendLocation","myIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","schema","object","keys","latitude","number","min","max","required","longitude","App","state","location","lat","lng","haveUsersLocation","zoom","userSetLocation","slat","slng","locations","showLocationForm","sendingLocation","sentLocation","sideDrawerOpen","setState","cancelLocation","formIsValid","result","validate","error","formSubmitted","event","preventDefault","then","setTimeout","valueChanged","target","name","value","prevState","drawerToggleClickHandler","backdropClickHandler","componentDidMount","render","position","backdrop","height","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Card, CardText, Button } from 'reactstrap';\nimport Joi from 'joi';\nimport L from 'leaflet';\nimport pin from './pinpoint.png'; \nimport './App.css';\n\n// Component for side drawer and toolbar\nimport Toolbar from './components/Toolbar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\n//import classnames from 'classnames';\n\nimport CardForm from './components/CardForm/CardForm';\nimport { getLocation, sendLocation } from './API';\n\nvar myIcon = L.icon({\n  iconUrl: pin,\n  iconSize: [30, 41],\n  iconAnchor: [12.5, 40],\n  popupAnchor: [0, -45],\n})\n\nconst schema = Joi.object().keys({\n  latitude: Joi.number().min(-90).max(90).required(),\n  longitude: Joi.number().min(-180).max(180).required()\n});\n\nclass App extends Component {\n  state = {\n    location: {\n      lat: 5.354482, \n      lng: 100.301226,\n    },\n    haveUsersLocation: false,\n    zoom: 1,\n    userSetLocation: {\n      slat: '',\n      slng: '',\n    },\n    locations: [],\n    showLocationForm: false,\n    sendingLocation: false,\n    sentLocation: false,\n    //sideDrawer \n    sideDrawerOpen: false\n  };\n  \n  // Get user geolocation and reconfigurate some attributes\n  componentDidMount(){\n    // Location from the database\n    getLocation()\n      .then(locations => {\n        this.setState({\n          locations,\n          haveUsersLocation: true,\n          zoom: 18\n        });\n      });\n  };\n\n  showLocationForm = () => {\n    this.setState({\n      showLocationForm: true\n    });\n  }\n\n  cancelLocation = () => {\n    this.setState({\n      showLocationForm: false\n    });\n  }\n\n  formIsValid = () => {\n    const userSetLocation = {\n      latitude: this.state.userSetLocation.slat,\n      longitude: this.state.userSetLocation.slng\n    };\n    const result = Joi.validate(userSetLocation, schema);\n    //console.log(userSetLocation);\n    return !result.error && userSetLocation ? true : false;\n  };\n\n  formSubmitted = (event) => {\n    event.preventDefault();\n    //console.log(this.state.userSetLocation);\n    \n    if (this.formIsValid()){\n      //if no error\n      this.setState({\n        sendingLocation: true\n      });\n\n      const location = {\n        latitude: this.state.userSetLocation.slat,\n        longitude: this.state.userSetLocation.slng\n      };\n\n      sendLocation(location)\n        .then((result) => {\n          setTimeout(() => {\n            this.setState({\n              sendingLocation: false,\n              sentLocation: true\n            });\n          }, 4000);\n        });\n    }\n  };\n\n  valueChanged = (event) => {\n    const { name, value } = event.target; \n    this.setState((prevState) => ({\n      userSetLocation: {\n        ...prevState.userSetLocation,\n        [name]: value,\n      }\n    }))\n  };\n\n  // Sidedrawer function\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen: false});\n  };\n\n  render(){\n    const position = [this.state.location.lat, this.state.location.lng];\n    // sidedrawer backdrop variable\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler}/>;\n    }\n    \n    return (\n      <div style={{height: '100%'}}>\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/> \n        <SideDrawer show={this.state.sideDrawerOpen}/>\n        {backdrop}\n        <div className=\"map\">\n          <Map className=\"map\" center={position} zoom={this.state.zoom}>\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            { \n              this.state.haveUsersLocation ?\n              <Marker \n                position={position} \n                icon={myIcon}>\n                <Popup>\n                  lat:{this.state.location.lat}, lng:{this.state.location.lng}\n                </Popup>\n              </Marker> : \"\"\n            }\n            {this.state.locations.map(location => (\n              <Marker \n                position={[location.latitude, location.longitude]} \n                icon={myIcon}>\n                <Popup>\n                  lat:{location.latitude}, lng:{location.longitude}\n                </Popup>\n              </Marker>\n            ))} \n          </Map>\n          {\n            !this.state.showLocationForm ?\n            <Button className=\"location-form\" onClick={this.showLocationForm} color=\"info\">Add a location</Button> :\n            !this.state.sentLocation ?\n            <CardForm\n              cancelLocation={this.cancelLocation}\n              showLocationForm={this.state.showLocationForm}\n              sendingLocation={this.state.sendingLocation}\n              sentLocation={this.state.sentLocation}\n              haveUsersLocation={this.state.haveUsersLocation}\n              formSubmitted={this.formSubmitted}\n              valueChanged={this.valueChanged}\n              formIsValid={this.formIsValid}\n            /> :\n            this.setState({sentLocation: false})\n          }   \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}