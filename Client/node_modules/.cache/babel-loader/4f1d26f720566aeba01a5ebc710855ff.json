{"ast":null,"code":"import _objectSpread from \"F:\\\\Project\\\\FYP-project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"F:\\\\Project\\\\FYP-project\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Joi from 'joi';\nimport L from 'leaflet';\nimport { Card, Button, CardTitle } from 'reactstrap';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport pin from './pinpoint.png';\nimport './App.css'; // Component for side drawer and toolbar\n\nimport Toolbar from './components/Toolbar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop'; //import classnames from 'classnames';\n\nimport CardForm from './components/CardForm/CardForm';\nvar myIcon = L.icon({\n  iconUrl: pin,\n  iconSize: [30, 41],\n  iconAnchor: [12.5, 40],\n  popupAnchor: [0, -45]\n});\nconst schema = Joi.object().keys({\n  latitude: Joi.number().min(-90).max(90).required(),\n  longitude: Joi.number().min(-180).max(180).required()\n});\nconst API_URL = window.location.hostname === 'localhost' ? 'http://10.234.35.203:80/api/v1/locations' : 'production-url-here';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: {\n        lat: 5.354482,\n        lng: 100.301226\n      },\n      haveUsersLocation: false,\n      zoom: 1,\n      userSetLocation: {\n        slat: '',\n        slng: ''\n      },\n      locations: [],\n      //sideDrawer \n      sideDrawerOpen: false\n    };\n\n    this.formIsValid = () => {\n      const userSetLocation = {\n        latitude: this.state.userSetLocation.slat,\n        longitude: this.state.userSetLocation.slng\n      };\n      const result = Joi.validate(userSetLocation, schema); //console.log(userSetLocation);\n\n      return !result.error && userSetLocation ? true : false;\n    };\n\n    this.formSubmitted = event => {\n      event.preventDefault(); //console.log(this.state.userSetLocation);\n\n      if (this.formIsValid()) {\n        //if no error\n        fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            //user specified location\n            latitude: this.state.userSetLocation.slat,\n            longitude: this.state.userSetLocation.slng // original boat location\n            //latitude: this.state.location.lat,\n            //longitude: this.state.location.lng\n\n          })\n        }).then(res => res.json()).then(location => {\n          console.log(location);\n        });\n      }\n    };\n\n    this.valueChanged = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState(prevState => ({\n        userSetLocation: _objectSpread({}, prevState.userSetLocation, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.drawerToggleClickHandler = () => {\n      this.setState(prevState => {\n        return {\n          sideDrawerOpen: !prevState.sideDrawerOpen\n        };\n      });\n    };\n\n    this.backdropClickHandler = () => {\n      this.setState({\n        sideDrawerOpen: false\n      });\n    };\n  }\n\n  // Get user geolocation and reconfigurate some attributes\n  componentDidMount() {\n    //Fetching the sailboat latest location\n    fetch(API_URL).then(res => res.json()).then(locations => {\n      this.setState({\n        locations\n      });\n    });\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        },\n        haveUsersLocation: true,\n        zoom: 18\n      });\n    }, () => {\n      console.log('Sorry but user does not give their location...' + 'Showing the IP location...');\n      fetch('https://ipapi.co/json').then(res => res.json()).then(location => {\n        this.setState({\n          location: {\n            lat: location.latitude,\n            lng: location.longitude\n          },\n          haveUsersLocation: true,\n          zoom: 18\n        });\n      });\n    });\n  }\n\n  render() {\n    const position = [this.state.location.lat, this.state.location.lng]; // sidedrawer backdrop variable\n\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = React.createElement(Backdrop, {\n        click: this.backdropClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      drawerClickHandler: this.drawerToggleClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      show: this.state.sideDrawerOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), backdrop, React.createElement(\"div\", {\n      className: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Map, {\n      className: \"map\",\n      center: position,\n      zoom: this.state.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), this.state.haveUsersLocation ? React.createElement(Marker, {\n      position: position,\n      icon: myIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"lat:\", this.state.location.lat, \", lng:\", this.state.location.lng)) : '', this.state.locations.map(location => React.createElement(Marker, {\n      position: [location.latitude, location.longitude],\n      icon: myIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"lat:\", location.latitude, \", lng:\", location.longitude))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["F:\\Project\\FYP-project\\client\\src\\App.js"],"names":["React","Component","Map","TileLayer","Marker","Popup","Joi","L","Card","Button","CardTitle","Form","FormGroup","Label","Input","pin","Toolbar","SideDrawer","Backdrop","CardForm","myIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","schema","object","keys","latitude","number","min","max","required","longitude","API_URL","window","location","hostname","App","state","lat","lng","haveUsersLocation","zoom","userSetLocation","slat","slng","locations","sideDrawerOpen","formIsValid","result","validate","error","formSubmitted","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","valueChanged","target","name","value","setState","prevState","drawerToggleClickHandler","backdropClickHandler","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","render","backdrop","height","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Joi from 'joi';\nimport L from 'leaflet';\nimport { Card, Button, CardTitle } from 'reactstrap';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport pin from './pinpoint.png'; \nimport './App.css';\n\n// Component for side drawer and toolbar\nimport Toolbar from './components/Toolbar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\n//import classnames from 'classnames';\n\nimport CardForm from './components/CardForm/CardForm';\n\nvar myIcon = L.icon({\n  iconUrl: pin,\n  iconSize: [30, 41],\n  iconAnchor: [12.5, 40],\n  popupAnchor: [0, -45],\n})\n\nconst schema = Joi.object().keys({\n  latitude: Joi.number().min(-90).max(90).required(),\n  longitude: Joi.number().min(-180).max(180).required()\n});\n\nconst API_URL = window.location.hostname === 'localhost' ? 'http://10.234.35.203:80/api/v1/locations' : 'production-url-here'\n\nclass App extends Component {\n  state = {\n    location: {\n      lat: 5.354482, \n      lng: 100.301226,\n    },\n    haveUsersLocation: false,\n    zoom: 1,\n    userSetLocation: {\n      slat: '',\n      slng: '',\n    },\n    locations: [],\n    //sideDrawer \n    sideDrawerOpen: false\n  };\n  \n  // Get user geolocation and reconfigurate some attributes\n  componentDidMount(){\n    //Fetching the sailboat latest location\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(locations => {\n        this.setState({\n          locations\n        });\n      });\n\n    navigator.geolocation.getCurrentPosition( (position) => {\n      this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        },\n        haveUsersLocation: true,\n        zoom: 18,\n      });\n    }, () => {\n      console.log('Sorry but user does not give their location...'+\n      'Showing the IP location...');\n\n      fetch('https://ipapi.co/json')\n        .then(res => res.json())\n        .then(location => {\n          this.setState({\n            location: {\n              lat: location.latitude,\n              lng: location.longitude\n            },\n            haveUsersLocation: true,\n            zoom: 18,\n          });\n        })\n    });\n  };\n\n  formIsValid = () => {\n    const userSetLocation = {\n      latitude: this.state.userSetLocation.slat,\n      longitude: this.state.userSetLocation.slng\n    };\n    const result = Joi.validate(userSetLocation, schema);\n    //console.log(userSetLocation);\n    return !result.error && userSetLocation ? true : false;\n  };\n\n  formSubmitted = (event) => {\n    event.preventDefault();\n    //console.log(this.state.userSetLocation);\n    \n    if (this.formIsValid()){\n      //if no error\n      fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          //user specified location\n          latitude: this.state.userSetLocation.slat,\n          longitude: this.state.userSetLocation.slng\n          // original boat location\n          //latitude: this.state.location.lat,\n          //longitude: this.state.location.lng\n        })\n      }).then(res => res.json())\n      .then(location => {\n        console.log(location);\n      })\n    }\n  };\n\n  valueChanged = (event) => {\n    const { name, value } = event.target; \n    this.setState((prevState) => ({\n      userSetLocation: {\n        ...prevState.userSetLocation,\n        [name]: value,\n      }\n    }))\n  };\n\n  // Sidedrawer function\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen: false});\n  };\n\n  render(){\n    const position = [this.state.location.lat, this.state.location.lng];\n    // sidedrawer backdrop variable\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler}/>;\n    }\n    \n    return (\n      <div style={{height: '100%'}}>\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/> \n        <SideDrawer show={this.state.sideDrawerOpen}/>\n        {backdrop}\n        <div className=\"map\">\n          <Map className=\"map\" center={position} zoom={this.state.zoom}>\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            { \n              this.state.haveUsersLocation ?\n              <Marker \n                position={position} \n                icon={myIcon}>\n                <Popup>\n                  lat:{this.state.location.lat}, lng:{this.state.location.lng}\n                </Popup>\n              </Marker> : ''\n            }\n            {this.state.locations.map(location => (\n              <Marker \n                position={[location.latitude, location.longitude]} \n                icon={myIcon}>\n                <Popup>\n                  lat:{location.latitude}, lng:{location.longitude}\n                </Popup>\n              </Marker>\n            ))} \n          </Map>     \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}