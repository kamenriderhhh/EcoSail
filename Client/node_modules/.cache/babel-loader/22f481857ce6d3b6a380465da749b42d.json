{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\FYP-project\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport pin from './pinpoint.png';\nimport './App.css';\nimport classnames from 'classnames';\nvar myIcon = L.icon({\n  iconUrl: pin,\n  iconSize: [30, 41],\n  iconAnchor: [12.5, 40],\n  popupAnchor: [0, -45]\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: {\n        lat: 5.354482,\n        lng: 100.301226\n      },\n      haveUsersLocation: false,\n      zoom: 1,\n      // for tab //\n      activeTab: '1' //~~~~~~~~~~~~~~~~~~~~~~~~~~//\n      // For tab //\n\n    };\n\n    this.formSubmitted = event => {\n      event.preventDefault();\n    };\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  } // Get user geolocation and reconfigurate some attributes\n\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        },\n        haveUsersLocation: true,\n        zoom: 18\n      });\n    }, () => {\n      console.log('Sorry but user does not give their location...' + 'Showing the IP location...');\n      fetch('https://ipapi.co/json').then(res => res.json()).then(location => {\n        this.setState({\n          location: {\n            lat: location.latitude,\n            lng: location.longitude\n          },\n          haveUsersLocation: true,\n          zoom: 18\n        });\n      });\n    });\n  }\n\n  render() {\n    const position = [this.state.location.lat, this.state.location.lng];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      tabs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === '1'\n      }),\n      onClick: () => {\n        this.toggle('1');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Open Street Map\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === '2'\n      }),\n      onClick: () => {\n        this.toggle('2');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Pi Camera\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === '3'\n      }),\n      onClick: () => {\n        this.toggle('3');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Sensors Data\"))), React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tabId: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      calssName: \"location-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Geolocation for Sailboat\"), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Please input the longitude and latitude for the sailboat.\"), React.createElement(Form, {\n      onSubmit: this.formSubmitted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"latitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Latitude\"), React.createElement(Input, {\n      type: \"number\",\n      name: \"latitude\",\n      id: \"latitude\",\n      placeholder: \"Enter the latitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"longitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Longitude\"), React.createElement(Input, {\n      type: \"number\",\n      name: \"longitude\",\n      id: \"longitude\",\n      placeholder: \"Enter the longitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      disabled: !this.state.haveUsersLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Send\"))), React.createElement(Map, {\n      className: \"map\",\n      center: position,\n      zoom: this.state.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), this.state.haveUsersLocation ? React.createElement(Marker, {\n      position: position,\n      icon: myIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"A pretty CSS3 popup. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), \" Easily customizable.\")) : ''))))), React.createElement(TabPane, {\n      tabId: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Pi Camera\"), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Pi Camera showing here\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Display view\"))))), React.createElement(TabPane, {\n      tabId: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"sensors data~~\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["F:\\Project\\FYP-project\\client\\src\\App.js"],"names":["React","Component","Map","TileLayer","Marker","Popup","L","TabContent","TabPane","Nav","NavItem","NavLink","Card","Button","CardTitle","CardText","Row","Col","Form","FormGroup","Label","Input","pin","classnames","myIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","App","state","location","lat","lng","haveUsersLocation","zoom","activeTab","formSubmitted","event","preventDefault","toggle","tab","setState","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","fetch","then","res","json","render","active"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport pin from './pinpoint.png'; \nimport './App.css';\nimport classnames from 'classnames';\n\nvar myIcon = L.icon({\n  iconUrl: pin,\n  iconSize: [30, 41],\n  iconAnchor: [12.5, 40],\n  popupAnchor: [0, -45],\n})\n\nclass App extends Component {\n  state = {\n    location: {\n      lat: 5.354482, \n      lng: 100.301226,\n    },\n    haveUsersLocation: false,\n    zoom: 1,\n    // for tab //\n    activeTab: '1',\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~//\n  }\n\n  // For tab //\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  \n  // Get user geolocation and reconfigurate some attributes\n  componentDidMount(){\n    navigator.geolocation.getCurrentPosition( (position) => {\n      this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        },\n        haveUsersLocation: true,\n        zoom: 18,\n      });\n    }, () => {\n      console.log('Sorry but user does not give their location...'+\n      'Showing the IP location...');\n\n      fetch('https://ipapi.co/json')\n        .then(res => res.json())\n        .then(location => {\n          this.setState({\n            location: {\n              lat: location.latitude,\n              lng: location.longitude\n            },\n            haveUsersLocation: true,\n            zoom: 18,\n          });\n        })\n    });\n  }\n\n  formSubmitted = (event) => {\n    event.preventDefault();\n  }\n\n  render(){\n    const position = [this.state.location.lat, this.state.location.lng];\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Open Street Map\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Pi Camera\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3' })}\n              onClick={() => { this.toggle('3'); }}\n            >\n              Sensors Data\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <Row >\n              <Col>\n                <div className=\"map\">\n                  <Card body calssName=\"location-form\">\n                    <CardTitle>Geolocation for Sailboat</CardTitle>\n                    <CardText>Please input the longitude and latitude for the sailboat.</CardText>\n                    <Form onSubmit={this.formSubmitted}>\n                      <FormGroup>\n                        <Label for=\"latitude\">Latitude</Label>\n                        <Input type=\"number\" name=\"latitude\" id=\"latitude\" placeholder=\"Enter the latitude\" />\n                      </FormGroup>\n                      <FormGroup>\n                        <Label for=\"longitude\">Longitude</Label>\n                        <Input type=\"number\" name=\"longitude\" id=\"longitude\" placeholder=\"Enter the longitude\" />\n                      </FormGroup>\n                      <Button type=\"submit\" color=\"info\" disabled={!this.state.haveUsersLocation}>Send</Button>\n                    </Form>\n                  </Card>\n                  <Map className=\"map\" center={position} zoom={this.state.zoom}>\n                    <TileLayer\n                      attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    { \n                      this.state.haveUsersLocation ?\n                      <Marker \n                        position={position} \n                        icon={myIcon} >\n                        <Popup>\n                          A pretty CSS3 popup. <br /> Easily customizable.\n                        </Popup>\n                      </Marker> : ''\n                    } \n                  </Map>     \n                </div>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"6\">\n                <Card body>\n                  <CardTitle>Pi Camera</CardTitle>\n                  <CardText>Pi Camera showing here</CardText>\n                  <Button>Display view</Button>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <Row >\n              <Col>\n                  sensors data~~\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}