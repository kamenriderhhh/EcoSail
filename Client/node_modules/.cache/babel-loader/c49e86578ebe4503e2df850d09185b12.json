{"ast":null,"code":"import _objectSpread from \"/home/ubuntu/Desktop/EcoSail/Client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ubuntu/Desktop/EcoSail/Client/src/components/Contents/MapView.js\";\nimport React, { Component } from 'react';\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Button } from 'reactstrap';\nimport Joi from 'joi';\nimport pin from '../../pinpoint.png';\nimport pin2 from '../../pinpoint2.png';\nimport './MapView.css';\nimport CardForm from '../CardForm/CardForm';\nimport { getDestination, getCurLocation, sendLocation } from '../../API';\nvar myIcon = L.icon({\n  iconUrl: pin,\n  iconSize: [30, 41],\n  iconAnchor: [12.5, 40],\n  popupAnchor: [0, -45]\n});\nvar myIcon2 = L.icon({\n  iconUrl: pin2,\n  iconSize: [30, 41],\n  iconAnchor: [12.5, 40],\n  popupAnchor: [0, -45]\n});\nconst schema = Joi.object().keys({\n  latitude: Joi.number().min(-90).max(90).required(),\n  longitude: Joi.number().min(-180).max(180).required()\n});\n\nclass MapView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: {\n        lat: 5.354482,\n        lng: 100.301226\n      },\n      haveUsersLocation: false,\n      zoom: 1,\n      userSetDest: {\n        slat: '',\n        slng: ''\n      },\n      curLocations: [],\n      destinations: [],\n      showLocationForm: false,\n      sendingLocation: false,\n      sentLocation: false\n    };\n\n    this.updateLocation = () => {\n      getDestination().then(destinations => {\n        this.setState({\n          destinations\n        });\n      });\n      getCurLocation().then(curLocations => {\n        this.setState({\n          curLocations,\n          haveUsersLocation: true,\n          zoom: 18\n        });\n      });\n    };\n\n    this.showLocationForm = () => {\n      this.setState({\n        showLocationForm: true\n      });\n    };\n\n    this.cancelLocation = () => {\n      this.setState({\n        showLocationForm: false\n      });\n    };\n\n    this.formIsValid = () => {\n      const userSetDest = {\n        latitude: this.state.userSetDest.slat,\n        longitude: this.state.userSetDest.slng\n      };\n      const result = Joi.validate(userSetDest, schema); //console.log(userSetDest);\n\n      return !result.error && userSetDest ? true : false;\n    };\n\n    this.formSubmitted = event => {\n      event.preventDefault(); //console.log(this.state.userSetDest);\n\n      if (this.formIsValid()) {\n        //if no error\n        this.setState({\n          sendingLocation: true\n        });\n        const dest = {\n          latitude: this.state.userSetDest.slat,\n          longitude: this.state.userSetDest.slng\n        };\n        sendLocation(dest).then(result => {\n          setTimeout(() => {\n            this.setState({\n              sendingLocation: false,\n              sentLocation: true\n            });\n          }, 4000);\n        });\n      }\n    };\n\n    this.valueChanged = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState(prevState => ({\n        userSetDest: _objectSpread({}, prevState.userSetDest, {\n          [name]: value\n        })\n      }));\n    };\n  }\n\n  render() {\n    this.updateLocation();\n    var pos = [this.state.location.lat, this.state.location.lng];\n    var dest = [this.state.location.lat, this.state.location.lng];\n\n    if (Object.keys(this.state.curLocations).length != 0) {\n      var temp = this.state.curLocations; //console.log(\"thit: \"+this.state.curLocations);\n\n      pos[0] = parseFloat(temp.latitude);\n      pos[1] = parseFloat(temp.longitude);\n    }\n\n    if (Object.keys(this.state.destinations).length != 0) {\n      //var temp = this.state.destinations[this.state.destinations.length-1];\n      //console.log(\"thit: \"+this.state.curLocations);\n      dest[0] = parseFloat(this.state.destinations.latitude);\n      dest[1] = parseFloat(this.state.destinations.longitude); //console.log(\" ~ \"+parseFloat(this.state.destinations.latitude));\n    } //console.log(\"ye \"+dest[0]);\n    //console.log(Object.values(pos));\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Map, {\n      className: \"map\",\n      center: pos,\n      zoom: this.state.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), this.state.haveUsersLocation ? React.createElement(Marker, {\n      position: pos,\n      icon: myIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"lat:\", pos[0], \", lng:\", pos[1])) : \"\", this.state.haveUsersLocation ? React.createElement(Marker, {\n      position: dest,\n      icon: myIcon2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"lat:\", dest[0], \", lng:\", dest[1])) : \"\"), !this.state.showLocationForm ? React.createElement(Button, {\n      className: \"location-form\",\n      onClick: this.showLocationForm,\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Add a location\") : !this.state.sentLocation ? React.createElement(CardForm, {\n      cancelLocation: this.cancelLocation,\n      showLocationForm: this.state.showLocationForm,\n      sendingLocation: this.state.sendingLocation,\n      sentLocation: this.state.sentLocation,\n      haveUsersLocation: this.state.haveUsersLocation,\n      formSubmitted: this.formSubmitted,\n      valueChanged: this.valueChanged,\n      formIsValid: this.formIsValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }) : this.setState({\n      sentLocation: false,\n      showLocationForm: false\n    }));\n  }\n\n}\n\nexport default MapView;","map":{"version":3,"sources":["/home/ubuntu/Desktop/EcoSail/Client/src/components/Contents/MapView.js"],"names":["React","Component","L","Map","TileLayer","Marker","Popup","Button","Joi","pin","pin2","CardForm","getDestination","getCurLocation","sendLocation","myIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","myIcon2","schema","object","keys","latitude","number","min","max","required","longitude","MapView","state","location","lat","lng","haveUsersLocation","zoom","userSetDest","slat","slng","curLocations","destinations","showLocationForm","sendingLocation","sentLocation","updateLocation","then","setState","cancelLocation","formIsValid","result","validate","error","formSubmitted","event","preventDefault","dest","setTimeout","valueChanged","target","name","value","prevState","render","pos","Object","length","temp","parseFloat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport L from 'leaflet';\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { Button } from 'reactstrap';\r\nimport Joi from 'joi';\r\nimport pin from '../../pinpoint.png'; \r\nimport pin2 from '../../pinpoint2.png'; \r\nimport './MapView.css';\r\nimport CardForm from '../CardForm/CardForm';\r\nimport { getDestination, getCurLocation, sendLocation } from '../../API';\r\n\r\nvar myIcon = L.icon({\r\n    iconUrl: pin,\r\n    iconSize: [30, 41],\r\n    iconAnchor: [12.5, 40],\r\n    popupAnchor: [0, -45],\r\n})\r\n  \r\nvar myIcon2 = L.icon({\r\n    iconUrl: pin2,\r\n    iconSize: [30, 41],\r\n    iconAnchor: [12.5, 40],\r\n    popupAnchor: [0, -45],\r\n})\r\n\r\nconst schema = Joi.object().keys({\r\n    latitude: Joi.number().min(-90).max(90).required(),\r\n    longitude: Joi.number().min(-180).max(180).required()\r\n});  \r\n\r\nclass MapView extends Component {\r\n\r\n    state = {\r\n        location: {\r\n          lat: 5.354482, \r\n          lng: 100.301226,\r\n        },\r\n        haveUsersLocation: false,\r\n        zoom: 1,\r\n        userSetDest: {\r\n          slat: '',\r\n          slng: '',\r\n        },\r\n        curLocations: [],\r\n        destinations: [],\r\n        showLocationForm: false,\r\n        sendingLocation: false,\r\n        sentLocation: false,\r\n    };\r\n    \r\n    /*  \r\n    // Get user geolocation and reconfigurate some attributes\r\n    componentDidMount(){\r\n        // Location from the database\r\n        getDestination()\r\n            .then(destinations => {\r\n                this.setState({\r\n                    destinations,\r\n                });\r\n            });\r\n        \r\n        getCurLocation()\r\n            .then(curLocations => {        \r\n                //console.log(Object.keys(curLoc));\r\n                //console.log(\"that: \"+curLocations);\r\n                this.setState({\r\n                    curLocations,\r\n                    haveUsersLocation: true,\r\n                    zoom: 18\r\n                });\r\n            });\r\n        \r\n        \r\n    };*/\r\n    \r\n    // Get user geolocation and reconfigurate some attributes\r\n    updateLocation = () => {\r\n        getDestination()\r\n            .then(destinations => {\r\n                this.setState({\r\n                    destinations,\r\n                });\r\n            });\r\n        \r\n        getCurLocation()\r\n            .then(curLocations => {        \r\n                this.setState({\r\n                    curLocations,\r\n                    haveUsersLocation: true,\r\n                    zoom: 18\r\n                });\r\n            });\r\n    }\r\n    \r\n    showLocationForm = () => {\r\n        this.setState({\r\n        showLocationForm: true\r\n        });\r\n    }\r\n    \r\n    cancelLocation = () => {\r\n        this.setState({\r\n            showLocationForm: false\r\n        });\r\n    }\r\n    \r\n    formIsValid = () => {\r\n        const userSetDest = {\r\n            latitude: this.state.userSetDest.slat,\r\n            longitude: this.state.userSetDest.slng\r\n        };\r\n        const result = Joi.validate(userSetDest, schema);\r\n        //console.log(userSetDest);\r\n        return !result.error && userSetDest ? true : false;\r\n    };\r\n    \r\n    formSubmitted = (event) => {\r\n        event.preventDefault();\r\n        //console.log(this.state.userSetDest);\r\n        \r\n        if (this.formIsValid()){\r\n            //if no error\r\n            this.setState({\r\n                sendingLocation: true\r\n            });\r\n    \r\n        const dest = {\r\n            latitude: this.state.userSetDest.slat,\r\n            longitude: this.state.userSetDest.slng\r\n        };\r\n    \r\n        sendLocation(dest)\r\n            .then((result) => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                    sendingLocation: false,\r\n                    sentLocation: true\r\n                    });\r\n                }, 4000);\r\n            });\r\n        }\r\n    };\r\n    \r\n    valueChanged = (event) => {\r\n        const { name, value } = event.target; \r\n        this.setState((prevState) => ({\r\n            userSetDest: {\r\n                ...prevState.userSetDest,\r\n                [name]: value,\r\n            }\r\n        }))\r\n    };\r\n\r\n    render() {\r\n        this.updateLocation();\r\n\r\n        var pos = [this.state.location.lat, this.state.location.lng];\r\n        var dest = [this.state.location.lat, this.state.location.lng];\r\n        if (Object.keys(this.state.curLocations).length != 0){\r\n            var temp = this.state.curLocations;\r\n            //console.log(\"thit: \"+this.state.curLocations);\r\n            pos[0] = parseFloat(temp.latitude);\r\n            pos[1] = parseFloat(temp.longitude);\r\n        }\r\n        if (Object.keys(this.state.destinations).length != 0){\r\n            //var temp = this.state.destinations[this.state.destinations.length-1];\r\n            //console.log(\"thit: \"+this.state.curLocations);\r\n            dest[0] = parseFloat(this.state.destinations.latitude);\r\n            dest[1] = parseFloat(this.state.destinations.longitude);\r\n            //console.log(\" ~ \"+parseFloat(this.state.destinations.latitude));\r\n        }\r\n        //console.log(\"ye \"+dest[0]);\r\n        //console.log(Object.values(pos));\r\n        return (\r\n            <div>\r\n                <Map className=\"map\" center={pos} zoom={this.state.zoom}>\r\n                    <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    { \r\n                    this.state.haveUsersLocation ?\r\n                    <Marker \r\n                        position={pos} \r\n                        icon={myIcon}>\r\n                        <Popup>\r\n                            lat:{pos[0]}, lng:{pos[1]}\r\n                        </Popup>\r\n                    </Marker> : \"\"\r\n                    }\r\n                    {\r\n                    this.state.haveUsersLocation ?                    \r\n                    <Marker \r\n                        position={dest} \r\n                        icon={myIcon2}>\r\n                        <Popup>\r\n                            lat:{dest[0]}, lng:{dest[1]}\r\n                        </Popup>\r\n                    </Marker> : \"\"\r\n                    } \r\n                </Map>\r\n                {\r\n                  !this.state.showLocationForm ?\r\n                  <Button className=\"location-form\" onClick={this.showLocationForm} color=\"info\">Add a location</Button> :\r\n                  !this.state.sentLocation ?\r\n                  <CardForm\r\n                      cancelLocation={this.cancelLocation}\r\n                      showLocationForm={this.state.showLocationForm}\r\n                      sendingLocation={this.state.sendingLocation}\r\n                      sentLocation={this.state.sentLocation}\r\n                      haveUsersLocation={this.state.haveUsersLocation}\r\n                      formSubmitted={this.formSubmitted}\r\n                      valueChanged={this.valueChanged}\r\n                      formIsValid={this.formIsValid}\r\n                  /> :\r\n                  this.setState({\r\n                      sentLocation: false,\r\n                      showLocationForm: false\r\n                  })\r\n                } \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MapView;\r\n\r\n"]},"metadata":{},"sourceType":"module"}