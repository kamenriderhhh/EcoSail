{"map":"{\"version\":3,\"sources\":[\"F:\\\\Project\\\\FYP-project\\\\client\\\\node_modules\\\\url-loader\\\\dist\\\\cjs.js??ref--6-oneOf-0!F:\\\\Project\\\\FYP-project\\\\client\\\\src\\\\pinpoint.png\",\"F:\\\\Project\\\\FYP-project\\\\client\\\\src\\\\App.js\",\"F:\\\\Project\\\\FYP-project\\\\client\\\\src\\\\serviceWorker.js\",\"F:\\\\Project\\\\FYP-project\\\\client\\\\src\\\\index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"myIcon\",\"L\",\"icon\",\"iconUrl\",\"pin\",\"iconSize\",\"iconAnchor\",\"popupAnchor\",\"App\",\"state\",\"location\",\"lat\",\"lng\",\"haveUsersLocation\",\"zoom\",\"userSetLocation\",\"slat\",\"slng\",\"activeTab\",\"formSubmitted\",\"event\",\"preventDefault\",\"console\",\"log\",\"_this\",\"valueChanged\",\"_event$target\",\"target\",\"name\",\"value\",\"setState\",\"prevState\",\"Object\",\"objectSpread\",\"defineProperty\",\"tab\",\"this\",\"_this2\",\"navigator\",\"geolocation\",\"getCurrentPosition\",\"position\",\"coords\",\"latitude\",\"longitude\",\"fetch\",\"then\",\"res\",\"json\",\"_this3\",\"react_default\",\"a\",\"createElement\",\"Nav\",\"tabs\",\"NavItem\",\"NavLink\",\"className\",\"classnames\",\"active\",\"onClick\",\"toggle\",\"TabContent\",\"TabPane\",\"tabId\",\"Row\",\"Col\",\"Card\",\"body\",\"CardTitle\",\"CardText\",\"Form\",\"onSubmit\",\"FormGroup\",\"Label\",\"for\",\"Input\",\"onChange\",\"type\",\"step\",\"id\",\"placeholder\",\"Button\",\"color\",\"disabled\",\"Map\",\"center\",\"TileLayer\",\"attribution\",\"url\",\"Marker\",\"Popup\",\"sm\",\"Component\",\"Boolean\",\"window\",\"hostname\",\"match\",\"startApp\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"cordova\",\"addEventListener\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/pinpoint.b0112773.png\\\";\",\"import React, { Component } from 'react';\\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\\nimport L from 'leaflet';\\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\\nimport pin from './pinpoint.png'; \\nimport './App.css';\\nimport classnames from 'classnames';\\n\\nvar myIcon = L.icon({\\n  iconUrl: pin,\\n  iconSize: [30, 41],\\n  iconAnchor: [12.5, 40],\\n  popupAnchor: [0, -45],\\n})\\n\\nclass App extends Component {\\n  state = {\\n    location: {\\n      lat: 5.354482, \\n      lng: 100.301226,\\n    },\\n    haveUsersLocation: false,\\n    zoom: 1,\\n    userSetLocation: {\\n      slat: 0,\\n      slng: 0,\\n    },\\n    // for tab //\\n    activeTab: '1',\\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~//\\n  }\\n\\n  // For tab //\\n  toggle(tab) {\\n    if (this.state.activeTab !== tab) {\\n      this.setState({\\n        activeTab: tab\\n      });\\n    }\\n  }\\n  \\n  // Get user geolocation and reconfigurate some attributes\\n  componentDidMount(){\\n    navigator.geolocation.getCurrentPosition( (position) => {\\n      this.setState({\\n        location: {\\n          lat: position.coords.latitude,\\n          lng: position.coords.longitude\\n        },\\n        haveUsersLocation: true,\\n        zoom: 18,\\n      });\\n    }, () => {\\n      console.log('Sorry but user does not give their location...'+\\n      'Showing the IP location...');\\n\\n      fetch('https://ipapi.co/json')\\n        .then(res => res.json())\\n        .then(location => {\\n          this.setState({\\n            location: {\\n              lat: location.latitude,\\n              lng: location.longitude\\n            },\\n            haveUsersLocation: true,\\n            zoom: 18,\\n          });\\n        })\\n    });\\n  }\\n\\n  formSubmitted = (event) => {\\n    event.preventDefault();\\n    console.log(this.state.userSetLocation);\\n  }\\n\\n  valueChanged = (event) => {\\n    const { name, value } = event.target; \\n    this.setState((prevState) => ({\\n      userSetLocation: {\\n        ...prevState.userSetLocation,\\n        [name]: value,\\n      }\\n    }))\\n  }\\n\\n  render(){\\n    const position = [this.state.location.lat, this.state.location.lng];\\n    return (\\n      <div>\\n        <Nav tabs>\\n          <NavItem>\\n            <NavLink\\n              className={classnames({ active: this.state.activeTab === '1' })}\\n              onClick={() => { this.toggle('1'); }}\\n            >\\n              Open Street Map\\n            </NavLink>\\n          </NavItem>\\n          <NavItem>\\n            <NavLink\\n              className={classnames({ active: this.state.activeTab === '2' })}\\n              onClick={() => { this.toggle('2'); }}\\n            >\\n              Pi Camera\\n            </NavLink>\\n          </NavItem>\\n          <NavItem>\\n            <NavLink\\n              className={classnames({ active: this.state.activeTab === '3' })}\\n              onClick={() => { this.toggle('3'); }}\\n            >\\n              Sensors Data\\n            </NavLink>\\n          </NavItem>\\n        </Nav>\\n        <TabContent activeTab={this.state.activeTab}>\\n          <TabPane tabId=\\\"1\\\">\\n            <Row >\\n              <Col>\\n                <div className=\\\"map\\\">\\n                  <Card body className=\\\"location-form\\\">\\n                    <CardTitle>Geolocation for Sailboat</CardTitle>\\n                    <CardText>Please input the longitude and latitude for the sailboat.</CardText>\\n                    <Form onSubmit={this.formSubmitted}>\\n                      <FormGroup>\\n                        <Label for=\\\"slat\\\">Latitude</Label>\\n                        <Input \\n                          onChange={this.valueChanged}\\n                          type=\\\"number\\\" \\n                          step=\\\"0.000001\\\"\\n                          name=\\\"slat\\\" \\n                          id=\\\"slat\\\" \\n                          placeholder=\\\"Enter the latitude\\\" />\\n                      </FormGroup>\\n                      <FormGroup>\\n                        <Label for=\\\"slng\\\">Longitude</Label>\\n                        <Input \\n                          onChange={this.valueChanged}\\n                          type=\\\"number\\\"\\n                          step=\\\"0.000001\\\" \\n                          name=\\\"slng\\\" \\n                          id=\\\"slng\\\" \\n                          placeholder=\\\"Enter the longitude\\\" />\\n                      </FormGroup>\\n                      <Button type=\\\"submit\\\" color=\\\"info\\\" disabled={!this.state.haveUsersLocation}>Send</Button>\\n                    </Form>\\n                  </Card>\\n                  <Map className=\\\"map\\\" center={position} zoom={this.state.zoom}>\\n                    <TileLayer\\n                      attribution='&amp;copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors'\\n                      url=\\\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\\\"\\n                    />\\n                    { \\n                      this.state.haveUsersLocation ?\\n                      <Marker \\n                        position={position} \\n                        icon={myIcon} >\\n                        <Popup>\\n                          A pretty CSS3 popup. <br /> Easily customizable.\\n                        </Popup>\\n                      </Marker> : ''\\n                    } \\n                  </Map>     \\n                </div>\\n              </Col>\\n            </Row>\\n          </TabPane>\\n          <TabPane tabId=\\\"2\\\">\\n            <Row>\\n              <Col sm=\\\"6\\\">\\n                <Card body>\\n                  <CardTitle>Pi Camera</CardTitle>\\n                  <CardText>Pi Camera showing here</CardText>\\n                  <Button>Display view</Button>\\n                </Card>\\n              </Col>\\n            </Row>\\n          </TabPane>\\n          <TabPane tabId=\\\"3\\\">\\n            <Row >\\n              <Col>\\n                  sensors data~~\\n              </Col>\\n            </Row>\\n          </TabPane>\\n        </TabContent>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nimport 'leaflet/dist/leaflet.css';\\nimport 'bootstrap/dist/css/bootstrap.css';\\n\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nconst startApp = () => {\\n    ReactDOM.render(<App />, document.getElementById('root'));\\n}\\n\\n// IOS or Android setting\\nif (window.cordova) {\\n    document.addEventListener('deviceready', startApp, false);\\n} else {\\n    startApp();\\n}\\n\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{28:function(e,t,a){e.exports=a.p+\"static/media/pinpoint.b0112773.png\"},35:function(e,t,a){e.exports=a(48)},42:function(e,t,a){},43:function(e,t,a){},48:function(e,t,a){\"use strict\";a.r(t);var n=a(1),o=a.n(n),l=a(14),i=a.n(l),c=(a(40),a(41),a(42),a(15)),r=a(24),s=a(25),u=a(26),m=a(33),h=a(27),d=a(32),p=a(66),g=a(68),E=a(65),v=a(67),b=a(9),f=a.n(b),S=a(50),y=a(51),w=a(52),C=a(53),L=a(54),k=a(55),j=a(56),O=a(57),z=a(58),T=a(59),N=a(64),P=a(60),U=a(61),I=a(62),A=a(63),D=a(28),x=a.n(D),M=(a(43),a(3)),B=a.n(M),J=f.a.icon({iconUrl:x.a,iconSize:[30,41],iconAnchor:[12.5,40],popupAnchor:[0,-45]}),W=function(e){function t(){var e,a;Object(s.a)(this,t);for(var n=arguments.length,o=new Array(n),l=0;l<n;l++)o[l]=arguments[l];return(a=Object(m.a)(this,(e=Object(h.a)(t)).call.apply(e,[this].concat(o)))).state={location:{lat:5.354482,lng:100.301226},haveUsersLocation:!1,zoom:1,userSetLocation:{slat:0,slng:0},activeTab:\"1\"},a.formSubmitted=function(e){e.preventDefault(),console.log(a.state.userSetLocation)},a.valueChanged=function(e){var t=e.target,n=t.name,o=t.value;a.setState(function(e){return{userSetLocation:Object(r.a)({},e.userSetLocation,Object(c.a)({},n,o))}})},a}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"toggle\",value:function(e){this.state.activeTab!==e&&this.setState({activeTab:e})}},{key:\"componentDidMount\",value:function(){var e=this;navigator.geolocation.getCurrentPosition(function(t){e.setState({location:{lat:t.coords.latitude,lng:t.coords.longitude},haveUsersLocation:!0,zoom:18})},function(){console.log(\"Sorry but user does not give their location...Showing the IP location...\"),fetch(\"https://ipapi.co/json\").then(function(e){return e.json()}).then(function(t){e.setState({location:{lat:t.latitude,lng:t.longitude},haveUsersLocation:!0,zoom:18})})})}},{key:\"render\",value:function(){var e=this,t=[this.state.location.lat,this.state.location.lng];return o.a.createElement(\"div\",null,o.a.createElement(S.a,{tabs:!0},o.a.createElement(y.a,null,o.a.createElement(w.a,{className:B()({active:\"1\"===this.state.activeTab}),onClick:function(){e.toggle(\"1\")}},\"Open Street Map\")),o.a.createElement(y.a,null,o.a.createElement(w.a,{className:B()({active:\"2\"===this.state.activeTab}),onClick:function(){e.toggle(\"2\")}},\"Pi Camera\")),o.a.createElement(y.a,null,o.a.createElement(w.a,{className:B()({active:\"3\"===this.state.activeTab}),onClick:function(){e.toggle(\"3\")}},\"Sensors Data\"))),o.a.createElement(C.a,{activeTab:this.state.activeTab},o.a.createElement(L.a,{tabId:\"1\"},o.a.createElement(k.a,null,o.a.createElement(j.a,null,o.a.createElement(\"div\",{className:\"map\"},o.a.createElement(O.a,{body:!0,className:\"location-form\"},o.a.createElement(z.a,null,\"Geolocation for Sailboat\"),o.a.createElement(T.a,null,\"Please input the longitude and latitude for the sailboat.\"),o.a.createElement(P.a,{onSubmit:this.formSubmitted},o.a.createElement(U.a,null,o.a.createElement(I.a,{for:\"slat\"},\"Latitude\"),o.a.createElement(A.a,{onChange:this.valueChanged,type:\"number\",step:\"0.000001\",name:\"slat\",id:\"slat\",placeholder:\"Enter the latitude\"})),o.a.createElement(U.a,null,o.a.createElement(I.a,{for:\"slng\"},\"Longitude\"),o.a.createElement(A.a,{onChange:this.valueChanged,type:\"number\",step:\"0.000001\",name:\"slng\",id:\"slng\",placeholder:\"Enter the longitude\"})),o.a.createElement(N.a,{type:\"submit\",color:\"info\",disabled:!this.state.haveUsersLocation},\"Send\"))),o.a.createElement(p.a,{className:\"map\",center:t,zoom:this.state.zoom},o.a.createElement(g.a,{attribution:'&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}),this.state.haveUsersLocation?o.a.createElement(E.a,{position:t,icon:J},o.a.createElement(v.a,null,\"A pretty CSS3 popup. \",o.a.createElement(\"br\",null),\" Easily customizable.\")):\"\"))))),o.a.createElement(L.a,{tabId:\"2\"},o.a.createElement(k.a,null,o.a.createElement(j.a,{sm:\"6\"},o.a.createElement(O.a,{body:!0},o.a.createElement(z.a,null,\"Pi Camera\"),o.a.createElement(T.a,null,\"Pi Camera showing here\"),o.a.createElement(N.a,null,\"Display view\"))))),o.a.createElement(L.a,{tabId:\"3\"},o.a.createElement(k.a,null,o.a.createElement(j.a,null,\"sensors data~~\")))))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var G=function(){i.a.render(o.a.createElement(W,null),document.getElementById(\"root\"))};window.cordova?document.addEventListener(\"deviceready\",G,!1):G(),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[35,1,2]]]);","extractedComments":[]}